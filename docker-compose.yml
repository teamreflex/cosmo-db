services:
  db:
    restart: always
    image: postgres:15
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - DB_READ_USER
    healthcheck:
      test: "pg_isready -d ${DB_NAME} -U ${DB_USER}"
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db:/var/lib/postgresql/data
      # command: ["postgres", "-c", "log_statement=all"]
  processor:
    build:
      context: .
      dockerfile: docker/processor.Dockerfile
    restart: unless-stopped
    environment:
      - FORCE_PRETTY_LOGGER
      - RPC_ENDPOINT
      - DB_HOST
      - DB_PORT=5432
      - DB_NAME
      - DB_USER
      - DB_PASS
      - DB_READ_USER
      - DB_READ_PASS
      - ENABLE_OBJEKTS
      - ENABLE_GRAVITY
    command: ["sqd", "process:prod"]
    depends_on:
      - db
  drizzle-proxy:
    build:
      context: .
      dockerfile: docker/drizzle-proxy.Dockerfile
    restart: always
    environment:
      - DB_HOST
      - DB_PORT=5432
      - DB_NAME
      - DB_USER
      - DB_PASS
      - DB_READ_USER
      - DB_READ_PASS
      - PROXY_HTTP_PORT
      - PROXY_KEY
      - PROXY_CACHE_MAX_AGE
    ports:
      - "${PROXY_HTTP_PORT}:${PROXY_HTTP_PORT}"
    depends_on:
      - db
  gravity-api:
    build:
      context: .
      dockerfile: docker/gravity-api.Dockerfile
    restart: always
    environment:
      - DB_HOST
      - DB_PORT=5432
      - DB_NAME
      - DB_READ_USER
      - DB_READ_PASS
      - GRAVITY_HTTP_PORT
      - GRAVITY_CORS
    ports:
      - "${GRAVITY_HTTP_PORT}:${GRAVITY_HTTP_PORT}"
    depends_on:
      - db
volumes:
  db:
    driver: local
